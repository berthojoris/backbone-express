## Philosophy and architecture

The point is that your application should work entirely client-side, and that you can add backbone-express to an existing project at the very end of development with little to no hassle. (The exception would be when you use backbone-express's API proxying support, in which case you do need to have that proxy running.) Therefore, sometimes we'll have to do things in a way that may be a tad bit more cumbersome than if we can assume a server process running at all times (to do neat things like compilation and concatenation) but that's just how it is.

1. read in index.html, parse it, find all javascript files, load them and collect all Backbone models, collections and routers, which we can then hook up to our existing code and do the server-side thing
2. figure out the best way to handle precompilation (and implement it for Jade and Handlebars)

    ==> See Railgun application

Note that, for step (1), we can do precompilations and all that sort of thing simply by parsing the HTML, but to find our Backbone models, we'll actually have to run the HTML in a DOM, because these JavaScript files might well modify their behavior based on a `window` config setting or something of the sort, which wouldn't be available when just plainly running the code server-side, and we need to accomodate that.

This is okay, though, because it's a one-time process: we only need to find those models and routers on startup and that's it.

## Thoughts / implementation details

Template precompilation will put templates in an object under `jade.templates`, `Handlebars.templates` et cetera so to make it easy on yourself, you should make sure that client-side compilation does the same thing.

---

Also, this is probably a non-issue, but backbone-express needs to play nice with draughtsman, that is, in dev mode, the livereloader should just work.

## Todo

* better error messages
* easier building and serving process, should work transparently with CoffeeScript
* live rebuilding
* better inline docs and getting started docs
